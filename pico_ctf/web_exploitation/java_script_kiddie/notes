if(u_in.length == LEN){
  key = u_in;
}
on browser console:
  bytes:
    length: 704
      (704 / 16 == 44)
set the key as the user input if size == 16
for(var i = 0; i < LEN; i++){
  // 48 == '0'
  shifter = key.charCodeAt(i) - 48;
  for(var j = 0; j < (bytes.length / LEN); j ++){
    // i:  0, [ 0, 16, 32, ... , 704]
    // i:  1, [ 1, 17, 33, ... , 704 + 1]
    // i: 15, [15, 31, 47, ... , 704 + 15]
    // this fills the array completely
    // result [0 .. 15] == result [704 .. 719] (shifter == 0)
    //        [0 .. 719]                  j          16      704         [0 .. 15]
    result[(j * LEN) + i] = bytes[(((j + shifter) * LEN) % bytes.length) + i]
  }
}
encode the result to base64

it returns a PNG file but with wrong ordered bytes
PNG file structure:
  PNG:
    89 50 4e 47 0d 0a 1a 0a
  IHDR:
    00 00 00 0d 49 48 44 52

the key is 16 bytes and the first 16 bytes are known
the key could be ascii[48 .. 127]
a script to guess the key and find if result [0 .. 15 ] == PNG struct

there is multiples keys that find the PNG code, and some of these that are the right ones
Anyone of these can generate a QR code in the website which contains the flag
zbarimg index.png
