two arguments (0x4, 0x2d)

0x4  => ebp + 0x8
0x2d => ebp + 0xc

<+6>:mov    eax,DWORD PTR [ebp+0xc]
  eax = 0x2d
<+9>:mov    DWORD PTR [ebp-0x4],eax
  ebp-0x4 == 0x2d
<+12>:mov    eax,DWORD PTR [ebp+0x8]
  eax == 0x4
<+15>:mov    DWORD PTR [ebp-0x8],eax
  ebp-0x8 == 0x4
<+18>:jmp    0x50c <asm2+31>
<+31>:cmp    DWORD PTR [ebp-0x8],0x5fa1
<+38>:jle    0x501 <asm2+20>
  0x4 <= 0x5fa1

; WHILE
<+20>:add    DWORD PTR [ebp-0x4],0x1
<+24>:add    DWORD PTR [ebp-0x8],0xd1
<+31>:cmp    DWORD PTR [ebp-0x8],0x5fa1
<+38>:jle    0x501 <asm2+20>

; RETURN [ebp-0x4]
<+40>:mov    eax,DWORD PTR [ebp-0x4]
<+43>:leave
<+44>:ret


(0x5af1-0x4)/0xd1 == 117.114 (0x75 + dec), (0x2d + (0x75 + 1))
